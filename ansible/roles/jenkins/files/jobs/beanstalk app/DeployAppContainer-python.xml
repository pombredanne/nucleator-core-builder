<?xml version='1.0' encoding='UTF-8'?>
<!--
# Copyright 2015 47Lining LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<project>
  <actions/>
  <description></description>
  <displayName>Deploy $ApplicationName app to Container</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <jp.ikedam.jenkins.plugins.extensible__choice__parameter.ExtensibleChoiceParameterDefinition plugin="extensible-choice-parameter@1.2.2">
          <name>CustomerCage</name>
          <description>The cage for deployment</description>
          <editable>false</editable>
          <choiceListProvider class="jp.ikedam.jenkins.plugins.extensible_choice_parameter.SystemGroovyChoiceListProvider">
            <scriptText>import groovy.io.FileType
def parent_path = &quot;/var/lib/jenkins/nucleator/siteconfig/ansible/roles/siteconfig&quot;
def list = []
def pattern = ~/([a-zA-Z0-9]+)-([a-zA-Z0-9]+).yml/

def dir = new File(parent_path+&quot;/vars&quot;)
dir.eachFileRecurse (FileType.FILES) { file -&gt;
  def mat = pattern.matcher(file.name)
  if(mat.matches() &amp;&amp; !file.name.startsWith(&quot;{&quot;)) {
    list &lt;&lt; mat[0][1]+&quot;:&quot;+mat[0][2]
  }
}
return list</scriptText>
            <usePredefinedVariables>false</usePredefinedVariables>
          </choiceListProvider>
        </jp.ikedam.jenkins.plugins.extensible__choice__parameter.ExtensibleChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ContainerName</name>
          <description>The beanstalk container for the application</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <jp.ikedam.jenkins.plugins.extensible__choice__parameter.ExtensibleChoiceParameterDefinition plugin="extensible-choice-parameter@1.2.2">
          <name>ApplicationLocation</name>
          <description></description>
          <editable>false</editable>
          <choiceListProvider class="jp.ikedam.jenkins.plugins.extensible_choice_parameter.SystemGroovyChoiceListProvider">
            <scriptText>artifact = &quot;$ApplicationName&quot;
url = &quot;$ArtifactoryUrl/artifactory/api/search/artifact?name=&quot;+artifact
def data = new URL(url).getText(requestProperties: [&apos;X-Result-Detail&apos;: &apos;info&apos;])
def slurper = new groovy.json.JsonSlurper()
def a_fact = slurper.parseText(data)
def result = []
def pattern = ~/http:\/\/[a-zA-Z0-9.]*:?[0-9]*\/artifactory\/([a-zA-Z-]+)\/([a-zA-Z0-9.-]+)\/$$artifact(.*).zip/
a_fact.results.each{
  def mat = pattern.matcher(it.downloadUri)
  result.add(it.downloadUri)
}
return result
</scriptText>
            <usePredefinedVariables>true</usePredefinedVariables>
            <project class="project" reference="../../../../../.."/>
          </choiceListProvider>
        </jp.ikedam.jenkins.plugins.extensible__choice__parameter.ExtensibleChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ApplicationVersion</name>
          <description>What is the version number of the application?</description>
          <defaultValue>1.0</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export REPO_HOME=$$JENKINS_HOME/nucleator
# Run the ansible script to publish to the stackset.
echo Deploying artifact to stackset $$CustomerCage
CUST=&quot;$$(echo &quot;$$CustomerCage&quot; | cut -d &apos;:&apos; -f 1)&quot;
CAGE=&quot;$$(echo &quot;$$CustomerCage&quot; | cut -d &apos;:&apos; -f 2)&quot;
echo About to run nucleator beanstalk deploy --customer &quot;$$CUST&quot; --cage &quot;$$CAGE&quot; --app_name &quot;$$ContainerName&quot; --app_url &quot;$$ApplicationLocation&quot; --app_version &quot;$$ApplicationVersion&quot;
ssh -F ~/.ssh/config ec2-user@nucleator &lt;&lt; ENDSSH
nucleator beanstalk deploy --customer &quot;$$CUST&quot; --cage &quot;$$CAGE&quot; --app_name &quot;$$ContainerName&quot; --app_url &quot;$$ApplicationLocation&quot; --app_version &quot;$$ApplicationVersion&quot;
ENDSSH</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>