# Copyright 2015 47Lining LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# install python2.7, pip2.7 and a virtualenv with wrapper so it starts on login

- name: ensure python and pip 2.7 are in place, with required deps
  yum: name={{item}} state=installed
  sudo: true
  when: ansible_os_family == 'RedHat'
  with_items:
    - python26-pip
    - python27
    - python27-pip
    - python27-devel
    - gcc

- name: sudo pip install virtualenvwrapper
  pip: name=virtualenvwrapper state=present
  sudo: true

- name: see if virtualenv exists in /usr/bin
  stat: path=/usr/bin/virtualenvwrapper_lazy.sh
  register: venv_in_usr_bin

- name: set venv_home to /usr/bin
  set_fact: venv_home = "/usr/bin"
  when: venv_in_usr_bin.stat.exists

- name: see if virtualenv exists in /usr/local/bin
  stat: path=/usr/local/bin/virtualenvwrapper_lazy.sh
  register: venv_in_usr_local_bin

- name: set venv_home to /usr/local/bin
  set_fact: venv_home = "/usr/local/bin"
  when: venv_in_usr_local_bin.stat.exists

- name: set error message if virtualenvwrapper is not where we expect
  fail: msg="No virtualenvwrapper.sh found in /usr/bin or /usr/local/bin"
  when: venv_home is not defined

- name: ensure virtualenv dir exists
  file:
    path={{VIRTUAL_ENV_DIR}}
    state=directory
    mode=0775

- name: create virtualenv
  shell: "export WORKON_HOME={{VIRTUAL_ENV_DIR}} && source {{venv_home}}/virtualenvwrapper_lazy.sh && mkvirtualenv {{VIRTUAL_ENV_NAME}} -p {{PYTHON_EXE}}"
  args:
    creates: "{{VIRTUAL_ENV_DIR | osPathJoin(VIRTUAL_ENV_NAME)}}"

- name: add virtualenv setup to bashrc so our virtualenv is used on startup
  blockinfile:
    dest=~/.bashrc
    content="export WORKON_HOME={{VIRTUAL_ENV_DIR}}\nsource {{venv_home}}/virtualenvwrapper_lazy.sh\nworkon {{VIRTUAL_ENV_NAME}}"
